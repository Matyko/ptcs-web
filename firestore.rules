rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        function hasRole(rsc) {
            return request.auth.uid in rsc.data.users;
        }

        match /users/{userId} {
            allow read, update, delete: if request.auth != null && request.auth.uid == userId;
            allow create: if request.auth != null;
        }

        match /parks-pending/{parkId} {
            allow create, read: if request.auth != null;
            allow update: if request.auth.uid in request.resource.data.contributors;
            allow delete: if request.auth != null && hasRole(get(/databases/$(database)/documents/roles/admin));
        }

        match /parks/{parkId} {
            allow read: if true;
            allow create, update, delete: if request.auth != null && hasRole(get(/databases/$(database)/documents/roles/admin));
        }
    }
}
